builder:
  track: dev

labels:
  app-group: estafette-ci-extensions
  team: estafette-team
  language: golang

version:
  semver:
    major: 0
    minor: 1

stages:
  build:
    image: golang:1.14.2-alpine3.11
    env:
      CGO_ENABLED: 0
      GOOS: linux
      GOGC: off
    commands:
    - go test ./...
    - go build -a -installsuffix cgo -ldflags "-X main.appgroup=${ESTAFETTE_LABEL_APP_GROUP} -X main.app=${ESTAFETTE_GIT_NAME} -X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}" -o ./publish/${ESTAFETTE_GIT_NAME} .

  bake:
    image: extensions/docker:dev
    action: build
    inline: |
      FROM google/cloud-sdk:290.0.0-alpine

      LABEL maintainer="estafette.io" \
            description="The ${ESTAFETTE_GIT_NAME} component is an Estafette extension to deploy applications to a Kubernetes Engine cluster using a simple kubernetes.yaml file"

      RUN apk update \
          && apk add --upgrade gnupg \
          && rm /var/cache/apk/*

      RUN curl https://storage.googleapis.com/kubernetes-release/release/v1.16.4/bin/linux/amd64/kubectl --output /google-cloud-sdk/bin/kubectl \
          && chmod +x /google-cloud-sdk/bin/kubectl \
          && kubectl version --client

      COPY ${ESTAFETTE_GIT_NAME} /
      COPY templates /templates

      ENV ESTAFETTE_LOG_FORMAT="console"

      ENTRYPOINT ["/${ESTAFETTE_GIT_NAME}"]
    container: gke-yaml
    repositories:
    - extensions
    path: ./publish
    copy:
    - templates

  check-container:
    parallelStages:
      check-efficiency:
        image: extensions/docker:dev
        action: dive
        container: gke-yaml
        repositories:
        - extensions

      vulnerability-scan:
        image: extensions/docker:dev
        action: trivy
        container: gke-yaml
        repositories:
        - extensions

  integration-test:
    image: extensions/gke-yaml:${ESTAFETTE_BUILD_VERSION}
    credentials: gke-tooling
    namespace: mynamespace
    manifests:
    - kubernetes.yaml
    placeholders:
      APP_NAME: ${ESTAFETTE_LABEL_APP}
      VERSION: ${ESTAFETTE_BUILD_VERSION}
    deployments:
    - mydeployment
    statefulsets:
    - mystatefulset
    daemonsets:
    - mydaemonset
    dryrun: true

  push-to-docker-hub:
    image: extensions/docker:dev
    action: push
    container: gke-yaml
    repositories:
    - extensions

  slack-notify:
    image: extensions/slack-build-status:dev
    workspace: estafette
    channels:
    - '#build-status'
    when:
      status == 'succeeded' ||
      status == 'failed'

releases:
  dev:
    triggers:
    - pipeline:
        name: self
        branch: .+
    stages:
      tag-container-image:
        image: extensions/docker:stable
        action: tag
        container: gke-yaml
        repositories:
        - extensions
        tags:
        - dev

  beta:
    stages:
      tag-container-image:
        image: extensions/docker:stable
        action: tag
        container: gke-yaml
        repositories:
        - extensions
        tags:
        - beta

      slack-notify:
        image: extensions/slack-build-status:dev
        workspace: estafette
        channels:
        - '#release-status'
        when:
          status == 'succeeded' ||
          status == 'failed'

  stable:
    stages:
      tag-container-image:
        image: extensions/docker:stable
        action: tag
        container: gke-yaml
        repositories:
        - extensions
        tags:
        - stable
        - latest

      slack-notify:
        image: extensions/slack-build-status:dev
        workspace: estafette
        channels:
        - '#release-status'
        when:
          status == 'succeeded' ||
          status == 'failed'